package airfoil;

import com.maxeler.maxcompiler.v1.kernelcompiler.KernelLib;
import com.maxeler.maxcompiler.v1.statemachine.SMOutput;
import com.maxeler.maxcompiler.v1.statemachine.SMStateValue;
import com.maxeler.maxcompiler.v1.statemachine.kernel.KernelStateMachine;
import com.maxeler.maxcompiler.v1.utils.MathUtils;

public class ResInputSM extends KernelStateMachine {

		private final SMStateValue counter;
		private final SMOutput output;
		private final int max;

		public ResInputSM(KernelLib owner, int max) {
			super(owner);
			counter = state.value(smUInt(MathUtils.bitsToRepresent(max)), 0);
			output = io.output("output", smBool());
			this.max = max;
		}

		@Override
		public void nextState() {
			IF ( counter.eq(max) ) {
				counter.next <== 0;
			} ELSE {
				counter.next <== counter + 1;
			}
		}

		@Override
		public void outputFunction() {
			output <== counter.eq(0);
		}

}
